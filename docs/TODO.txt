X - Style: use css modules for local styling

X - Change buttons from css classes to complete shared components (edit/submit/add)

X - Change id to uuidv4

X - api calls

X - api development

X - connect to database

X - Test all functionalities related to Create an user

X - Program to interfaces for controllers, use-cases, services and data-access
  X - Create interfaces 
  X - Create implementations
  X - Contructors receives interfaces as args
  X - Test if it is working

X - Create express adapter between routes and controllers
  X - Remodel controllers to be framework agnostic

X - BDD tests for signin and create

X - Wrappers for controllers (initialize depedencies, validate request, open/close 
database connection, handles no-business errors)

X - readonly for classes dependency

X - Test all functionalities related to SignIn an user

X - Create Functionality for get signed user by authToken

X - Unit and Bdd for Signed user by Token

X - Review UserDataAccess tests and add the missing ones

X - Review all the custom Errors

0 - Review all tests: to see if there are 
    X - No expects inside conditionals or catch blocks
    X - use try/catch form success tests too
    0 - Use ApiCaller for api requests
    0 - Change to Given/When/Then

0 - Wipe the external dependencies in the tests (use adapters when needed)

0 - All types moved to type files and no lost in classes

0 - Filters to request for global use (filter bodyIsDefined, AuthTokenIsValid)

0 - Authentication Context for logged in users (useReducer, and logout button in layout)

0 - CRUD for Tasks

0 - CRUD for TODOs

0 - Connect cruds to views

0 - Form validation in general

0 - HATEOAS to api routes

0 - SWAGGER

0 - Testing env using sqlite

0 - Deploy as Heroku App

-----------------

 0 for done

 X for NOT done

-----------------
